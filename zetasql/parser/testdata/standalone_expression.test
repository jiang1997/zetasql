# This file includes tests for standalone expressions, outside of queries.
[default mode=expression]
1
--
IntLiteral(1) [0-1]
--
1
==

'abc'
--
StringLiteral('abc') [0-5]
--
'abc'
==

# like with escape
col1 like '$_' escape '$'
--
BinaryExpression(LIKE) [0-25]
  PathExpression [0-4]
    Identifier(col1) [0-4]
  EscapedExpression [10-25]
    StringLiteral('$_') [10-14]
    StringLiteral('$') [22-25]
--
col1 LIKE '$_' ESCAPE '$'
==

# like escape with: not a string literal
col1 like 'kk' escape abc
--
ERROR: Syntax error: Expected string literal but got identifier "abc" [at 1:23]
col1 like 'kk' escape abc
                      ^
==

# ilike
col1 NOT ILIKE '&_' escape '&'
--
BinaryExpression(NOT ILIKE) [0-30]
  PathExpression [0-4]
    Identifier(col1) [0-4]
  EscapedExpression [15-30]
    StringLiteral('&_') [15-19]
    StringLiteral('&') [27-30]
--
col1 NOT ILIKE '&_' ESCAPE '&'
==

# rlike
col1 NOT RLIKE '.a'
--
BinaryExpression(NOT RLIKE) [0-19]
  PathExpression [0-4]
    Identifier(col1) [0-4]
  StringLiteral('.a') [15-19]
--
col1 NOT RLIKE '.a'
==

abc + @param + @@sysvar + count(*) + (select 1) + (select x from y)
--
BinaryExpression(+) [0-67]
  BinaryExpression(+) [0-47]
    BinaryExpression(+) [0-34]
      BinaryExpression(+) [0-23]
        BinaryExpression(+) [0-12]
          PathExpression [0-3]
            Identifier(abc) [0-3]
          ParameterExpr [6-12]
            Identifier(param) [7-12]
        SystemVariableExpr [15-23]
          PathExpression [17-23]
            Identifier(sysvar) [17-23]
      FunctionCall [26-34]
        PathExpression [26-31]
          Identifier(count) [26-31]
        Star(*) [32-33]
    ExpressionSubquery [37-47]
      Query [38-46]
        Select [38-46]
          SelectList [45-46]
            SelectColumn [45-46]
              IntLiteral(1) [45-46]
  ExpressionSubquery [50-67]
    Query [51-66]
      Select [51-66]
        SelectList [58-59]
          SelectColumn [58-59]
            PathExpression [58-59]
              Identifier(x) [58-59]
        FromClause [60-66]
          TablePathExpression [65-66]
            PathExpression [65-66]
              Identifier(y) [65-66]
--
abc + @param + @@sysvar + count(*) + (
  SELECT
    1
) + (
  SELECT
    x
  FROM
    y
)
==


abc + ? + count(*) + (select 1) + (select x from y) - (select ?) * @test_param
--
BinaryExpression(-) [0-78]
  BinaryExpression(+) [0-51]
    BinaryExpression(+) [0-31]
      BinaryExpression(+) [0-18]
        BinaryExpression(+) [0-7]
          PathExpression [0-3]
            Identifier(abc) [0-3]
          ParameterExpr(1) [6-7]
        FunctionCall [10-18]
          PathExpression [10-15]
            Identifier(count) [10-15]
          Star(*) [16-17]
      ExpressionSubquery [21-31]
        Query [22-30]
          Select [22-30]
            SelectList [29-30]
              SelectColumn [29-30]
                IntLiteral(1) [29-30]
    ExpressionSubquery [34-51]
      Query [35-50]
        Select [35-50]
          SelectList [42-43]
            SelectColumn [42-43]
              PathExpression [42-43]
                Identifier(x) [42-43]
          FromClause [44-50]
            TablePathExpression [49-50]
              PathExpression [49-50]
                Identifier(y) [49-50]
  BinaryExpression(*) [54-78]
    ExpressionSubquery [54-64]
      Query [55-63]
        Select [55-63]
          SelectList [62-63]
            SelectColumn [62-63]
              ParameterExpr(2) [62-63]
    ParameterExpr [67-78]
      Identifier(test_param) [68-78]
--
abc + ? + count(*) + (
  SELECT
    1
) + (
  SELECT
    x
  FROM
    y
) - (
  SELECT
    ?
) * @test_param
==

?
--
ParameterExpr(1) [0-1]
--
?
==

@@sysvar
--
SystemVariableExpr [0-8]
  PathExpression [2-8]
    Identifier(sysvar) [2-8]
--
@@sysvar
==

a.b.c.d
--
PathExpression [0-7]
  Identifier(a) [0-1]
  Identifier(b) [2-3]
  Identifier(c) [4-5]
  Identifier(d) [6-7]
--
a.b.c.d
==

# Dot star is not allowed in a standalone expression.
abc.*
--
ERROR: Syntax error: Expected end of input but got "." [at 1:4]
abc.*
   ^
==

# Parse fails on extra stuff after the expression.
abc def
--
ERROR: Syntax error: Expected end of input but got identifier "def" [at 1:5]
abc def
    ^
==

abc +
--
ERROR: Syntax error: Unexpected end of expression [at 1:6]
abc +
     ^
==

a.
b. # comment
c. /* comment
xxxx
*/ d
--
PathExpression [0-39]
  Identifier(a) [0-1]
  Identifier(b) [3-4]
  Identifier(c) [16-17]
  Identifier(d) [38-39]
--
a.b.c.d
==

# Empty string as input.
[strip_trailing_newline]
--
ERROR: Syntax error: Unexpected end of expression [at 1:1]

^
==

# Empty statement - just comments.
/* comment */
--
ERROR: Syntax error: Unexpected end of expression [at 1:14]
/* comment */
             ^
==

# Empty statement - just whitespace.
  

--
ERROR: Syntax error: Unexpected end of expression [at 1:1]

^
